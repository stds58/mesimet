class StaticClass:

    @staticmethod
    def bar():
        return [' О ',' ■ ',' X ',' T ']

#print(StaticClass.bar())

class Doska:
    storona_min = 4
    storona_max = 20
    def __init__(self, storona = None):
        self.storona = storona
        self.doska = self.set_doska

    #сделать доску
    @property
    def set_doska(self):
        d = range(1, self.storona + 1)
        self.doska = [[' О ' for i in d] for j in d]
        return self.doska

    @set_doska.setter
    def set_doska(self):
        if isinstance(self.storona, int):
            if self.storona >= self.storona_min and self.storona <= self.storona_max:
                self.storona = self.storona
            else:
                self.storona = self.storona_min
        else:
            self.storona = self.storona_min

    #поменять значение в ячейке доски
    @property
    def set_kletka(self):
        return self.doska

    @set_kletka.setter
    def set_kletka(self, value):
        # if stroka.find(',') >= 0:
        #     zapros = stroka.split(',')
        try:
            koordX = int(value[0]) - 1
            koordY = int(value[1]) - 1
            znacenie = str(value[2])
            #type(pl1.set_doska)
        except ValueError:
            print('x,y не числа')
        except IndexError:
            print('не введено новое значение клетки')
        # except AttributeError:
        #     print('AttributeError')
        else:
            if koordX >= 0 and koordX < self.storona and koordY >= 0 and koordY < self.storona:
                self.koordX = koordX
                self.koordY = koordY
            else:
                self.koordX = None
                self.koordY = None
                print('координаты x,y вышли за рамки диапазона')
            #if znacenie == ' О ' or znacenie == ' ■ ' or znacenie == ' X ' or znacenie == ' T ':
            if znacenie in StaticClass.bar():
                self.znacenie = znacenie
            else:
                self.znacenie = None
                print('новое значение клетки вне списка установленных значений')
            if self.koordX is not None and self.koordX is not None and self.znacenie is not None:
                self.doska[self.koordX][self.koordY] = self.znacenie

    #получить значение ячейки доски
    @property
    def get_cell(self):
        if self.koordX is None and self.koordX is None:
            return ''
        else:
            return self.doska[self.koordX][self.koordY]

    @get_cell.setter
    def get_cell(self, value):
        # if stroka.find(',') >= 0:
        #     zapros = stroka.split(',')
        try:
            koordX = int(value[0]) - 1
            koordY = int(value[1]) - 1
            #type(pl1.set_doska)
        except ValueError as e:
            print('x,y не числа')
        except AttributeError:
            print('AttributeError')
        else:
            if koordX >= 0 and koordX < self.storona and koordY >= 0 and koordY < self.storona:
                self.koordX = koordX
                self.koordY = koordY
            else:
                self.koordX = None
                self.koordY = None
                print('koordXY--')

    def __str__(self):
        return '\n'.join([f"{ii}|{'|'.join(i)}|" for i,ii in zip(self.doska,range(1,self.storona+1))])


pl1 = Doska(6)
#x = input('ввести значение:')
#pl1.set_kletka = x
pl1.set_kletka = [2,4,' ■ ']
print(pl1)
print('--------------')
pl1.get_cell = [4,1]
print(pl1.get_cell)
